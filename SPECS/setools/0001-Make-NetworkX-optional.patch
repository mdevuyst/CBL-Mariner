From e46ee9d04860908c047f0e583e944c9d080671b2 Mon Sep 17 00:00:00 2001
From: Chris PeBenito <chpebeni@linux.microsoft.com>
Date: Tue, 14 Dec 2021 14:24:20 -0500
Subject: [PATCH 1/1] Make NetworkX optional.

The CLI tools get installed to most distros, but sedta and seinfoflow are
not typically used.

MSFT_TAG: upstreamed

Signed-off-by: Chris PeBenito <chpebeni@linux.microsoft.com>
---

 setools/dta.py      | 20 ++++++++++++++++----
 setools/infoflow.py | 18 ++++++++++++++----
 2 files changed, 30 insertions(+), 8 deletions(-)

diff --git a/setools/dta.py b/setools/dta.py
index 0fe752f..420843a 100644
--- a/setools/dta.py
+++ b/setools/dta.py
@@ -24,8 +24,11 @@ from collections import defaultdict
 from contextlib import suppress
 from typing import DefaultDict, Iterable, List, NamedTuple, Optional, Union

-import networkx as nx
-from networkx.exception import NetworkXError, NetworkXNoPath, NodeNotFound
+try:
+    import networkx as nx
+    from networkx.exception import NetworkXError, NetworkXNoPath, NodeNotFound
+except ImportError:
+    logging.getLogger(__name__).debug("NetworkX failed to import.")

 from .descriptors import EdgeAttrDict, EdgeAttrList
 from .policyrep import AnyTERule, SELinuxPolicy, TERuletype, Type
@@ -87,8 +92,15 @@ class DomainTransitionAnalysis:
         self.reverse = reverse
         self.rebuildgraph = True
         self.rebuildsubgraph = True
-        self.G = nx.DiGraph()
-        self.subG = self.G.copy()
+
+        try:
+            self.G = nx.DiGraph()
+            self.subG = self.G.copy()
+        except NameError:
+            self.log.critical("NetworkX is not available.  This is "
+                               "requried for Domain Transition Analysis.")
+            self.log.critical("This is typically in the python3-networkx package.")
+            raise

     @property
     def reverse(self) -> bool:
diff --git a/setools/infoflow.py b/setools/infoflow.py
index 80041f1..da88755 100644
--- a/setools/infoflow.py
+++ b/setools/infoflow.py
@@ -21,8 +21,11 @@ import logging
 from contextlib import suppress
 from typing import cast, Iterable, List, Mapping, Optional, Union

-import networkx as nx
-from networkx.exception import NetworkXError, NetworkXNoPath, NodeNotFound
+try:
+    import networkx as nx
+    from networkx.exception import NetworkXError, NetworkXNoPath, NodeNotFound
+except ImportError:
+    logging.getLogger(__name__).debug("NetworkX failed to import.")

 from .descriptors import EdgeAttrIntMax, EdgeAttrList
 from .permmap import PermissionMap
@@ -68,8 +72,13 @@ class InfoFlowAnalysis:
         self.rebuildgraph = True
         self.rebuildsubgraph = True

-        self.G = nx.DiGraph()
-        self.subG = self.G.copy()
+        try:
+            self.G = nx.DiGraph()
+            self.subG = self.G.copy()
+        except NameError:
+            self.log.critical("NetworkX is not available.  This is "
+                               "requried for Information Flow Analysis.")
+            self.log.critical("This is typically in the python3-networkx package.")

     @property
     def min_weight(self) -> int:
--
2.31.1


